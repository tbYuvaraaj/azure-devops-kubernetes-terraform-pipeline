trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Pipeline to create Kubeernetes cluster in Azure'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'Azure_ssh.pub'

#- task: TerraformCLI@0
#  inputs:
#    command: 'init'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
#    backendType: 'azurerm'
#    backendServiceArm: 'Azure RM connection'
#    ensureBackend: true
#    backendAzureRmResourceGroupName: 'terraform-backend-rg-new'
#    backendAzureRmResourceGroupLocation: 'westeurope'
#    backendAzureRmStorageAccountName: 'storageaccountyuvinew'
#    backendAzureRmContainerName: 'storageaccountcontaineryuvinew'
#    backendAzureRmKey: 'kubernetes-dev.tfstate'
#    allowTelemetryCollection: true

#- task: TerraformCLI@0
#  inputs:
#    command: 'apply'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#    environmentServiceName: 'Azure RM connection'
#    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
#    allowTelemetryCollection: true
- task: TerraformCLI@0
  inputs:
    command: 'destroy'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'Azure RM connection'

